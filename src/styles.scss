// import Roboto, Noto Sans KR from Google Fonts
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;700&family=Roboto:wght@300;400;700&display=swap');

$border: 3px solid black;
// global palette
:root {
  --error: red;
  --bg: hsl(0, 0%, 80%);
}

// layout
[lang='ko'] {
  word-break: keep-all;
}
body {
  min-width: 360px;
  font-size: 18px;
  font-family: 'Noto Sans KR', 'Roboto', sans-serif;
  background-color: var(--bg);
  line-height: 1.4;
  padding: 2em;
  box-sizing: border-box;
}

.floating-container {
  margin: 3em 0;
  max-width: 800px;
  width: 100%;
  box-sizing: border-box;
  height: 600px;
  border: 3px solid black;
  position: relative;
}

.offset-top {
  position: absolute;
  bottom: 100%;
  margin-bottom: 1em;
  a {
    color: gray;
    text-decoration: none;
    font-size: 0.9em;
    padding: 0.2em 0.6em;
    &:hover {
      background-color: rgba(255, 255, 255, 0.3);
    }
  }
}

h1 {
  margin-top: 0;
}
main {
  display: flex;
  height: 100%;
}
section.main {
  flex: 2 1 0%;
  padding: 2em;
  display: flex;
  background-color: white;
  flex-direction: column;
  justify-content: flex-start;
}
section.sidebar {
  flex: 1 1 0%;
  min-width: 240px;
  border-inline-start: $border;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;

  .button {
    cursor: pointer;
    border: 0;
    border-block-start: $border;
    text-decoration: none;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    outline: 0;
    color: black;
    font-weight: bold;
    text-align: left;
    box-sizing: border-box;
    padding: 1em;
    line-height: 2.5em;
    background-color: white;
    position: relative;
    &:active,
    &:disabled,
    &.disabled {
      &::after {
        content: '';
        background-color: rgba(0, 0, 0, 0.1);
        position: absolute;
        display: block;
        z-index: 0;
        width: 100%;
        height: 100%;
        left: 0;
        top: 0;
      }
    }
    &.accent {
      background-color: rgb(255, 255, 37);
    }
  }
}

// append font awesome icons
.fa::before {
  font-family: 'Font Awesome 5 Free';
  padding-inline-end: 0.4em;
}
.home::before {
  content: '\f015';
}
.question::before {
  content: '\f059';
}
.login::before {
  content: '\f2f6';
}
.login::before {
  content: '\f2f5';
}
.error::before {
  content: '\f06a';
}
.user::before {
  content: '\f007';
}

.color-error {
  color: var(--error);
}

.form-field {
  display: block;
  label {
    font-weight: bold;
    font-size: 0.8em;
  }
}

main > form {
  display: inherit;
  flex-direction: inherit;
  width: 100%;
  height: 100%;
}

.form-field {
  margin-bottom: 1em;
  input[type='text'],
  input[type='password'] {
    width: 100%;
  }
  label {
    display: block;
    margin-bottom: 0.5em;
  }
}

input[type='text'],
input[type='password'] {
  border: 1px solid black;
  padding: 0 1em;
  box-sizing: border-box;
  font-size: inherit;
  border-radius: 0;
  background: white;
  line-height: 2.5em;
  &:focus {
    border-color: black !important;
    box-shadow: inset 0 0 0 1px black;
    outline: 0;
  }
  &:hover {
    border-color: gray;
  }
  &.ng-dirty.ng-invalid {
    border-color: var(--error);
  }
}
input[type='password'] {
  font-family: initial !important;
}

@media screen and (max-width: 700px) {
  body {
    font-size: 15px;
    padding: 1.5em;
  }
  main {
    display: block;
  }
  .floating-container {
    height: auto;
  }
  section.sidebar {
    border-inline-start: none;
    flex: 1 1 auto;
    flex-direction: row-reverse;
    flex-wrap: wrap;
    .button {
      flex: 1 1 0%;
      min-width: 170px;
      line-height: 2em;
      margin-inline-end: -3px;
      border-inline-end: $border;
    }
  }
  input[type='text'],
  input[type='password'] {
    font-size: 16px;
  }
}
